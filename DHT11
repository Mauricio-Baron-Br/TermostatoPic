//Biblioteca DHT11


sbit DATADHT at RB2_bit;
sbit DATADHT_Direction at TRISB2_bit;

unsigned short DATA1;
#define D0B0 DATA1.F0
#define D0B1 DATA1.F1
#define D0B2 DATA1.F2
#define D0B3 DATA1.F3
#define D0B4 DATA1.F4
#define D0B5 DATA1.F5
#define D0B6 DATA1.F6
#define D0B7 DATA1.F7

int DHTDATA[4];

void DHT11_init(){
     DATADHT_Direction = 0;
     DATADHT = 1;
     delay_ms(1000);
}
unsigned short DHT_START(){
     unsigned short time  = 0;
     DATADHT = 0;
     delay_ms(18);
     DATADHT = 1;
    // PORTB.F4 = 0;
     DATADHT_Direction = 1;
     time = 0;
     while(DATADHT && time <= 40 ){
          time++;
          delay_us(1);
     }
     time = 0;
     while(!DATADHT && time <= 80 ){
          time++;
          delay_us(1);
     }
     time = 0;
     while(DATADHT && time <= 80 ){
          time++;
          delay_us(1);
     }
}
int DHT11(unsigned short type){
    int time = 0;
    unsigned short result = 0, i = 0,byte;
    
    DHT_START();
    DATADHT_Direction = 1;
    
    byte = 0;
    //obtem os 4 bytes de dados
    for(byte=0;byte<=3;byte++){
       i = 1;
       for(i=1;i<=8;i++){
          while(!DATADHT);//aguarda proxima borda de subida
               result = 0;
               time = 0;
          while(DATADHT){
               time++;
               if(time >= 2 && !result){
                 result = 0x01;
                 }
          }
          //PORTB.F4 = result;
          switch(i){
            case 8:
                D0B0 = result;
            break;
            case 7:
                D0B1 = result;
            break;
            case 6:
                D0B2 = result;
            break;
            case 5:
                D0B3 = result;
            break;
            case 4:
                D0B4 = result;
            break;
            case 3:
                D0B5 = result;
            break;
            case 2:
                D0B6 = result;
            break;
            case 1:
                D0B7 = result;
            break;
          }
       }
       DHTDATA[byte]=DATA1;
    }
    DATADHT_Direction = 0;
    DATADHT = 1;
    if (type == 1){
        return  DHTDATA[0]*100+DHTDATA[3];   //retornaumidade
    }
    if (type == 2){
        return  DHTDATA[2]*100+DHTDATA[3];  //retorna a temperatura
    }
}
